- name: get k8s repolist status
  shell: "yum repolist |grep  kubernetes"
  register: kubernetes

- name: yum makecache
  yum:
      update_cache: yes
 
- name: get kubernetes repolist status
  shell: "yum repolist | grep kubernetes"
  register: kubernetes

- name: set new kubernetes repo
  yum_repository:
    name: kubernetes-ce
    description: kubernetes CE 最新版本
    basurl: https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/
    enabled: yes
    gpgcheck: 1
    gpgkey: https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
    file: kubernetes
  when: '"kubernetes" not in kubernetes.stdout'

- name: install soft
  yum:
    update_cache: yes
    name: "{{ item }}"
    state: latest
  loop:
  - kubelet
  - kubeadm
  - kubectl
  - kubernetes-cni 

- name: start kubelet
  systemd:
    name: kubelet
    enabled: true
    daemon_reload: yes
    state: restarted

- name: copy kubernetes file
  template:
    dest: /etc/kubernetes/kubeadm-config.ymal
    src: kubeadm-config.ymal.j2
    force: yes
    mode: 0644
    backup: yes
  when: "'k8s-m' in ansible_hostname"

- name: docker pull
  shell: "
        docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/{{ item }};
        docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/{{ item }} k8s.gcr.io/{{ item }};
        docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/{{ item }};        
  "
  loop:
    - "kube-apiserver:v{{ kube_version  }}"
    - "kube-controller-manager:v{{ kube_version }}"
    - "kube-scheduler:v{{ kube_version }}"
    - "kube-proxy:v{{ kube_version }}"
    - "pause:{{ pause_version }}"
    - "etcd:{{ etcd_version }}"
    - "coredns:{{ coredns_version }}"
  when: "'k8s-m' in ansible_hostname"

